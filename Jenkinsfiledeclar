pipeline {

agent any
	
tools {
maven 'maven3.9.0'
}

triggers {
  pollSCM('* * * * *')
}

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  timestamps()
}

stages{
stage('CheckoutCode'){
steps{
sendSlackNotifications(String buildStatus = 'STARTED')
git branch: 'development', credentialsId: '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', url: 'https://github.com/tajroshith/maven-web-application.git'
}
}

stage('Build'){
steps{
sh "mvn clean package"
}
}

stage('ExecutSonarQube'){
steps{
sh "mvn sonar:sonar"
}
}

stage('UploadArtifactsIntoNexus'){
steps{
sh "mvn clean deploy"
}
}

stage('DeployIntoTomcat'){
steps{
deploy adapters: [tomcat9(credentialsId: '5b404eee-159c-49fc-a421-07184d3f1874', path: '', url: 'http://3.22.222.12:8080')], contextPath: '/taj', war: '**/maven-web-application.war'
}
}

}//Stages

post {
  success {
sendSlackNotifications(currentBuild.result)
  }
  failure {
sendSlackNotifications(currentBuild.result)
  }
}

}//Pipeline

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#hdfcbank')
}
